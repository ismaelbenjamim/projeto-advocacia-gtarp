# Generated by Django 3.2.15 on 2022-10-01 08:04

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=250, verbose_name='Nome')),
                ('sobrenome', models.CharField(blank=True, max_length=250, verbose_name='Sobrenome')),
                ('identidade', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Identidade')),
                ('celular', models.CharField(blank=True, max_length=10, null=True, verbose_name='Celular')),
                ('idade', models.IntegerField(blank=True, null=True, verbose_name='Idade')),
                ('status', models.CharField(blank=True, max_length=100, null=True, verbose_name='Status')),
                ('organizacao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Organização')),
                ('porte', models.BooleanField(blank=True, null=True, verbose_name='Porte')),
                ('cnh', models.BooleanField(blank=True, null=True, verbose_name='CNH')),
            ],
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=250, verbose_name='Descrição')),
                ('valor_base', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Valor do serviço')),
                ('cargo_responsavel', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo resposável')),
                ('is_ativo', models.BooleanField(default=True, verbose_name='É ativo')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cargo', models.CharField(choices=[('0', 'Cliente'), ('1', 'Membro'), ('2', 'Advogado'), ('3', 'Promotor'), ('4', 'Juiz'), ('5', 'Juiz-Diretor')], default='0', max_length=20, verbose_name='Cargo')),
                ('first_name', models.CharField(blank=True, max_length=250, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=250, verbose_name='Sobrenome')),
                ('identidade', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Identidade')),
                ('celular', models.CharField(blank=True, max_length=10, null=True, verbose_name='Celular')),
                ('idade', models.IntegerField(blank=True, null=True, verbose_name='Idade')),
                ('organizacao', models.CharField(blank=True, choices=[('0', 'Policia Militar'), ('1', 'Polícia Civil'), ('2', 'Fórum'), ('3', 'Prefeitura')], max_length=100, null=True, verbose_name='Organização')),
                ('is_juridico', models.BooleanField(default=False, verbose_name='É do Fórum')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Foto de perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
